name: Deploy Next.js site to Pages (push docs/)

on:
  push:
    branches: [ main ]

env:
  PROJECT_DIR: '.'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies (supports yarn or npm)
        run: |
          cd "$PROJECT_DIR"
          if [ -f "yarn.lock" ]; then
            echo "Using yarn"
            yarn install --frozen-lockfile || yarn install
          elif [ -f "package-lock.json" ]; then
            echo "Using npm (ci)"
            npm ci
          elif [ -f "package.json" ]; then
            echo "Using npm (install)"
            npm install
          else
            echo "No package.json or lockfile found in $PROJECT_DIR" && exit 1
          fi

      - name: Build
        run: |
          cd "$PROJECT_DIR"
          npm run build || yarn build

      - name: Prepare static output (out/ or docs/)
        run: |
          cd "$PROJECT_DIR"
          if [ -d "out" ]; then
            echo "Found static export at $PROJECT_DIR/out"
          elif [ -d "docs" ]; then
            echo "Found docs/ — using docs/ as site"
            mkdir -p out && cp -r docs/* out/ || true
          else
            echo "No out/ or docs/ directory found."
            echo "If your project needs static export, add an 'export' script (next export) or generate static files into 'out/' or 'docs/'."
            exit 1
          fi

      - name: Publish docs/ to main (for GitHub Pages)
        env:
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
        run: |
          cd "$PROJECT_DIR"
          # Prepare docs/ from out/
          rm -rf docs || true
          mv out docs
          git config user.name "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"
          git add docs
          if git diff --staged --quiet; then
            echo "No changes to docs — skipping commit"
          else
            git commit -m "chore: update GitHub Pages docs from CI [skip ci]"
            git push origin HEAD:main
          fi
